import streamlit as st
import pandas as pd
import re
import os

# --- –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É ---
file_path = "data/catalog.xlsx"

# --- –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö ---
if not os.path.exists(file_path):
    st.error(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
else:
    df = pd.read_excel(file_path)

    st.title("üõç –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤")

    # --- –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º preorder ---
    df["status"] = df["preorder"].apply(lambda x: "üïì –ü—Ä–µ–¥–∑–∞–∫–∞–∑" if str(x).lower() == "yes" else "‚úÖ –í –Ω–∞–ª–∏—á–∏–∏")

    # --- –ò–∑–≤–ª–µ–∫–∞–µ–º —Ä–∞–∑–º–µ—Ä –∏ –ø–æ–ª –∏–∑ model ---
    def extract_size(text):
        if not isinstance(text, str):
            return None
        match = re.search(r"\b(\d{2,3})\b", text)  # –∏—â–µ–º —Ä–∞–∑–º–µ—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä, 38, 42)
        return match.group(1) if match else None

    def extract_gender(text):
        if not isinstance(text, str):
            return None
        text = text.lower()
        if "men" in text or "man" in text:
            return "–ú—É–∂—Å–∫–æ–π"
        elif "women" in text or "woman" in text:
            return "–ñ–µ–Ω—Å–∫–∏–π"
        elif "kids" in text or "child" in text:
            return "–î–µ—Ç—Å–∫–∏–π"
        elif "unisex" in text:
            return "–£–Ω–∏—Å–µ–∫—Å"
        return "–ù–µ —É–∫–∞–∑–∞–Ω"

    df["size"] = df["model"].apply(extract_size)
    df["gender"] = df["model"].apply(extract_gender)

    # --- –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Ñ–∏–ª—å—Ç—Ä–æ–≤ ---
    st.sidebar.header("üîç –§–∏–ª—å—Ç—Ä")
    search_model = st.sidebar.text_input("–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –º–æ–¥–µ–ª–∏")
    brand_filter = st.sidebar.multiselect("–ë—Ä–µ–Ω–¥", sorted(df["brand"].dropna().unique()))
    size_filter = st.sidebar.multiselect("–†–∞–∑–º–µ—Ä", sorted(df["size"].dropna().unique()))
    gender_filter = st.sidebar.multiselect("–ü–æ–ª", sorted(df["gender"].dropna().unique()))
    stock_filter = st.sidebar.multiselect("–ù–∞–ª–∏—á–∏–µ", ["‚úÖ –í –Ω–∞–ª–∏—á–∏–∏", "üïì –ü—Ä–µ–¥–∑–∞–∫–∞–∑"])

    # --- –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã ---
    filtered = df.copy()

    if search_model:
        filtered = filtered[filtered["model"].str.contains(search_model, case=False, na=False)]
    if brand_filter:
        filtered = filtered[filtered["brand"].isin(brand_filter)]
    if size_filter:
        filtered = filtered[filtered["size"].isin(size_filter)]
    if gender_filter:
        filtered = filtered[filtered["gender"].isin(gender_filter)]
    if stock_filter:
        filtered = filtered[filtered["status"].isin(stock_filter)]

    # --- –í—ã–≤–æ–¥ –∫–∞—Ä—Ç–æ—á–µ–∫ ---
    if filtered.empty:
        st.warning("‚ùå –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º.")
    else:
        for _, row in filtered.iterrows():
            with st.container():
                st.subheader(row["model"])
                st.write(f"**–ë—Ä–µ–Ω–¥:** {row['brand']}")
                st.write(f"**–ê—Ä—Ç–∏–∫—É–ª (SKU):** {row['SKU']}")
                st.write(f"**–ü–æ–ª:** {row['gender']}")
                st.write(f"**–†–∞–∑–º–µ—Ä:** {row['size'] if row['size'] else '‚Äî'}")
                st.write(f"**–°—Ç–∞—Ç—É—Å:** {row['status']}")
                st.write(f"üí∞ **–¶–µ–Ω–∞:** {row['price']}")

                if st.button(f"üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É ({row['SKU']})", key=row["SKU"]):
                    st.success(f"{row['model']} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É ‚úÖ")
                st.divider()
