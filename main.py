import os
import pandas as pd
import streamlit as st

# üìÅ –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
CATALOG_PATH = os.path.join("data", "catalog.xlsx")
NO_IMAGE_PATH = os.path.join("data", "no_image.jpg")

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Ñ–∞–π–ª-–∑–∞–≥–ª—É—à–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if not os.path.exists(NO_IMAGE_PATH):
    st.error(f"–§–∞–π–ª-–∑–∞–≥–ª—É—à–∫–∞ 'no_image.jpg' –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: {NO_IMAGE_PATH}")
    st.stop() # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –Ω–µ—Ç —Ñ–∞–π–ª–∞-–∑–∞–≥–ª—É—à–∫–∏

# üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞
@st.cache_data # –î–æ–±–∞–≤–∏–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
def load_catalog():
    if not os.path.exists(CATALOG_PATH):
        st.error(f"–§–∞–π–ª –∫–∞—Ç–∞–ª–æ–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {CATALOG_PATH}")
        return pd.DataFrame()
    df = pd.read_excel(CATALOG_PATH)
    df.fillna('', inplace=True)
    return df

catalog = load_catalog()

st.title("üõç –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤")

# üß© –í—ã–≤–æ–¥ –∫–∞—Ä—Ç–æ—á–µ–∫
for _, row in catalog.iterrows():
    # --- –õ–æ–≥–∏–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é ---
    # 1. –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∏–∑ Excel
    image_from_excel = str(row.get('image', '')).strip()
    
    # 2. –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—É—Ç—å –≤ Excel –ò —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª –ø–æ —ç—Ç–æ–º—É –ø—É—Ç–∏
    if image_from_excel and os.path.exists(image_from_excel):
        display_image_path = image_from_excel
    else:
        # –ï—Å–ª–∏ –ø—É—Ç–∏ –Ω–µ—Ç –∏–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É
        display_image_path = NO_IMAGE_PATH

    # --- –¶–µ–Ω–∞ ---
    price = str(row.get('price', '')).strip()
    price_html = f"<p style='font-size:16px; color:gray; margin:2px 0;'>{int(price)} ‚Ç∏</p>" if price.isdigit() else ""

    # --- –ú–æ–¥–µ–ª—å ---
    model = str(row.get('model', '')).strip()
    model_html = f"<p style='font-size:15px; color:#555; margin:2px 0;'>–ú–æ–¥–µ–ª—å: {model}</p>" if model else ""

    # --- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ ---
    st.markdown(f"""
    <div style="border:1px solid #ddd; border-radius:12px; padding:12px; margin:10px 0;">
    """, unsafe_allow_html=True)
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º st.image() –≤–º–µ—Å—Ç–æ HTML-—Ç–µ–≥–∞ img
    st.image(display_image_path, use_column_width=True)
    
    st.markdown(f"""
        <p style="font-weight:bold; font-size:18px;">{row.get('name', '')}</p>
        {model_html}
        {price_html}
    </div>
    """, unsafe_allow_html=True)

